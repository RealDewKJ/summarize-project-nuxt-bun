import { defineStore } from 'pinia'
import { ref, computed } from 'vue'

export interface ProjectDetail {
  ‡∏•‡∏≥‡∏î‡∏±‡∏ö: number
  ‡∏£‡∏∞‡∏ö‡∏ö‡∏á‡∏≤‡∏ô: string
  ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö: string
  PM: string
  ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏û‡∏ö: string[]
  ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤: string[]
  ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: string[]
}

export interface IssueDetail {
  project: string
  description: string
  priority: 'low' | 'medium' | 'high'
}

export interface CodeReview {
  project: string
  description: string
  priority: 'low' | 'medium' | 'high'
}

export interface MeetingData {
  meetingInfo: {
    title: string
    date: string
  }
  projectStats: {
    total: number
    inProgress: number
    completed: number
    issues: number
  }
  projects: {
    inProgress: string[]
    completed: string[]
    issues: string[]
  }
  projectDetails: ProjectDetail[]
  issuesDetails: IssueDetail[]
  codeReview: CodeReview[]
  codeReviewer: string
}

export const useMeetingStore = defineStore('meeting', () => {
  // State
  const meetingData = ref<MeetingData>({
    meetingInfo: {
      title: "‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ó‡∏µ‡∏°‡∏û‡∏±‡∏í‡∏ô‡∏≤ ‡∏õ‡∏µ 2568",
      date: "‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ó‡∏µ‡πà 30 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 05/08/2568"
    },
    projectStats: {
      total: 44,
      inProgress: 30,
      completed: 14,
      issues: 12
    },
    projects: {
      inProgress: [
        "App AtlasMonitor",
        "Healthflow API",
        "MyAtlas",
        "BMS HOSxP+ Mobile (ER)",
        "BMS HOSxP+ (‡∏ö‡∏£‡∏¥‡∏à‡∏≤‡∏Ñ‡∏≠‡∏ß‡∏±‡∏¢‡∏ß‡∏∞)",
        "Diagnosis AI (HOSxP)",
        "BMS Notification Services (Flutter .exe)",
        "Rx Intervention",
        "EHP ‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏†‡∏≤‡∏û‡∏Ñ‡∏ô‡πÑ‡∏Ç‡πâ",
        "Medication Reconcilliation",
        "laboratory ‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏• lab",
        "EHP ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏ï‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏á‡∏≤‡∏°",
        "Distict MOPH PC-1 Dashboard Flutter Web (PHR Viewer)",
        "HOSxP ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏ö‡πâ‡∏≤‡∏ô",
        "Rx Intervention Dashboard",
        "BGS NOTIFY",
        "‡∏ï‡∏π‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏ß‡∏ä‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏¢‡∏≤ Web",
        "Dental ü¶∑",
        "‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏±‡∏ô‡∏ï‡∏Å‡∏£‡∏£‡∏° EHP ‡∏Å‡∏±‡∏ö Tomorrow Smile",
        "Stretcher Center (‡∏®‡∏π‡∏ô‡∏¢‡πå‡πÄ‡∏õ‡∏•)",
        "NCDs Registry Dashboard",
        "‡πÅ‡∏û‡∏ó‡∏¢‡πå‡πÅ‡∏ú‡∏ô‡∏à‡∏µ‡∏ô",
        "HOSxP ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ï‡∏±‡∏ß tool ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å phase 2",
        "ER Registry Dashboard",
        "Tools ‡∏£‡∏û.‡∏Å‡∏£‡∏∞‡∏ó‡∏∏‡πà‡∏°‡πÅ‡∏ö‡∏ô",
        "‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏£‡∏∏‡∏†‡∏±‡∏ì‡∏ë‡πå",
        "Odin Med Check ‡∏™‡∏≤‡∏¢‡∏û‡∏≤‡∏ô‡∏¢‡∏≤",
        "Excellence Care",
        "HOSxPLabLinkOnline",
        "BMS Lab Online (API, AGENT)",
        "‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏Ñ‡πà‡∏≤ Vital Signs",
        "AtlasHomeCare (‡πÄ‡∏°‡∏ô‡∏π‡∏á‡∏≤‡∏ô‡∏ä‡∏∏‡∏°‡∏ä‡∏ô ‚Üí ‡∏™‡∏±‡πà‡∏á LAB)",
        "‡πÑ‡∏°‡πâ‡∏Å‡∏±‡πâ‡∏ô‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô WEB",
        "Dashboard ‡∏Å‡∏•‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏• (Monitor ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏Ç‡∏≠‡∏á ‡∏™‡∏õ‡∏™‡∏ä.)",
        "EHP-Consent",
        "MOPH Death Registry Dashboard",
        "Vital Sign GW",
        "NHIP PCU",
        "BMS-Consent",
        "BMS Smart Card Plugin Flutter",
        "Tools migration Crma",
        "‡∏ó‡∏î‡∏•‡∏≠‡∏á‡∏á‡∏≤‡∏ô",
        "‡∏£‡∏∞‡∏ö‡∏ö Refer ‡πÅ‡∏•‡∏∞ MOPH Refer ‡πÉ‡∏ô EHP"
      ],
      completed: [
        "‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô‡∏à‡∏±‡∏î‡∏™‡∏£‡∏£",
        "BMS Life ‡πÄ‡∏ö‡∏¥‡∏Å OT ‡∏à‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡∏° IM ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏°‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô",
        "Tools ‡∏£‡∏û.‡∏™‡∏ï my pcu"
      ],
      issues: [
        "App AtlasMonitor",
        "Healthflow API",
        "MyAtlas",
        "BMS HOSxP+ Mobile (ER)",
        "BMS HOSxP+ (‡∏ö‡∏£‡∏¥‡∏à‡∏≤‡∏Ñ‡∏≠‡∏ß‡∏±‡∏¢‡∏ß‡∏∞)",
        "laboratory ‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏• lab",
        "HOSxP ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏ö‡πâ‡∏≤‡∏ô",
        "Tools ‡∏£‡∏û.‡∏Å‡∏£‡∏∞‡∏ó‡∏∏‡πà‡∏°‡πÅ‡∏ö‡∏ô",
        "AtlasHomeCare (‡πÄ‡∏°‡∏ô‡∏π‡∏á‡∏≤‡∏ô‡∏ä‡∏∏‡∏°‡∏ä‡∏ô ‚Üí ‡∏™‡∏±‡πà‡∏á LAB)",
        "Dashboard ‡∏Å‡∏•‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏• (Monitor ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏Ç‡∏≠‡∏á ‡∏™‡∏õ‡∏™‡∏ä.)",
        "‡∏ó‡∏î‡∏•‡∏≠‡∏á‡∏á‡∏≤‡∏ô",
        "‡∏£‡∏∞‡∏ö‡∏ö Refer ‡πÅ‡∏•‡∏∞ MOPH Refer ‡πÉ‡∏ô EHP"
      ]
    },
    projectDetails: [],
    issuesDetails: [
      {
        project: "App AtlasMonitor",
        description: "‡∏á‡∏≤‡∏ô‡∏ä‡∏∏‡∏°‡∏ä‡∏ô ‡πÄ‡∏°‡∏ô‡∏π‡∏Ñ‡∏±‡∏î‡∏Å‡∏£‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á ‡∏ß‡∏≤‡∏á UI ‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
        priority: "high"
      },
      {
        project: "Healthflow API",
        description: "‡∏£‡∏≠ requirement API ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° (‡∏´‡∏≠‡∏ö‡∏´‡∏¥‡∏î)",
        priority: "medium"
      },
      {
        project: "MyAtlas",
        description: "‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏´‡∏≠‡∏ö‡∏´‡∏∑‡∏î ‡πÅ‡∏•‡∏∞‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÅ‡∏•‡πâ‡∏ß ‡∏£‡∏≠‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏≤‡∏° requirement ‡πÉ‡∏´‡∏°‡πà",
        priority: "medium"
      },
      {
        project: "BMS HOSxP+ Mobile (ER)",
        description: "‡∏™‡∏±‡πà‡∏á Doctor Order (Med, Lab, Xray, ‡∏´‡∏±‡∏ï‡∏ñ‡∏Å‡∏≤‡∏£, Set OR)",
        priority: "high"
      },
      {
        project: "BMS HOSxP+ (‡∏ö‡∏£‡∏¥‡∏à‡∏≤‡∏Ñ‡∏≠‡∏ß‡∏±‡∏¢‡∏ß‡∏∞)",
        description: "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô UI ‡πÉ‡∏´‡∏°‡πà",
        priority: "medium"
      },
      {
        project: "laboratory ‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏• lab",
        description: "‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å lab ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô‡∏Å‡∏£‡∏≤‡∏ü ‡πÄ‡∏™‡πâ‡∏ô‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ï‡πà‡∏ä‡∏∑‡∏≠ series ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠ lab ‡πÉ‡∏´‡πâ",
        priority: "high"
      },
      {
        project: "HOSxP ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏ö‡πâ‡∏≤‡∏ô",
        description: "‡∏™‡πà‡∏á‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏ö‡πâ‡∏≤‡∏ô ‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ IPD, ‡∏•‡∏î ToKen AI ‡∏•‡∏á‡∏°‡∏≤‡∏≠‡∏µ‡∏Å ‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏©‡∏≤ English ‡πÅ‡∏ó‡∏ô ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢",
        priority: "high"
      },
      {
        project: "Tools ‡∏£‡∏û.‡∏Å‡∏£‡∏∞‡∏ó‡∏∏‡πà‡∏°‡πÅ‡∏ö‡∏ô",
        description: "‡πÅ‡∏õ‡∏•‡∏á‡∏£‡∏π‡∏õ tiff ‡πÄ‡∏õ‡πá‡∏ô jpg - ‡∏•‡∏≠‡∏á‡∏ó‡∏≥‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡∏î‡∏∂‡∏á‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏á‡∏ö‡∏ô code dephi ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
        priority: "medium"
      },
      {
        project: "AtlasHomeCare (‡πÄ‡∏°‡∏ô‡∏π‡∏á‡∏≤‡∏ô‡∏ä‡∏∏‡∏°‡∏ä‡∏ô ‚Üí ‡∏™‡∏±‡πà‡∏á LAB)",
        description: "‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö requirement ‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° 1. ‡πÄ‡∏°‡∏ô‡∏π‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ AuthenCode 2. ‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ CID, HN, ‡∏ä‡∏∑‡πà‡∏≠ 3. LAB ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÉ‡∏ö‡∏™‡∏±‡πà‡∏á 4. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡∏¥‡∏î visit",
        priority: "high"
      },
      {
        project: "Dashboard ‡∏Å‡∏•‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏• (Monitor ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏Ç‡∏≠‡∏á ‡∏™‡∏õ‡∏™‡∏ä.)",
        description: "flutter ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏ü‡∏•‡πå Excel .xls ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏Å‡πà‡∏≤ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÅ‡∏Ñ‡πà .xlsx",
        priority: "medium"
      },
      {
        project: "‡∏ó‡∏î‡∏•‡∏≠‡∏á‡∏á‡∏≤‡∏ô",
        description: "VS Code ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏±‡∏ô flutter ‡∏ú‡πà‡∏≤‡∏ô Emulator ‡πÑ‡∏î‡πâ",
        priority: "low"
      },
      {
        project: "‡∏£‡∏∞‡∏ö‡∏ö Refer ‡πÅ‡∏•‡∏∞ MOPH Refer ‡πÉ‡∏ô EHP",
        description: "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ Refer In ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà",
        priority: "medium"
      }
    ],
    codeReview: [
      {
        project: "NHIP - ‡∏Ç‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏ô‡∏ä‡∏∏‡∏°‡∏ä‡∏ô Community Activity",
        description: "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Source Code ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà",
        priority: "medium"
      },
      {
        project: "NHIP - ‡∏Ç‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏Ñ‡πà‡∏≤ Vital Signs (One Stop Service)",
        description: "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Source Code ‡πÅ‡∏•‡∏∞‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà",
        priority: "medium"
      }
    ],
    codeReviewer: "‡∏≠‡∏≤‡∏£‡∏¢‡∏≤ ‡∏â‡∏≤‡∏¢‡∏≤‡∏á‡∏≤‡∏° (‡πÄ‡∏≠‡∏¥‡∏£‡πå‡∏ô)"
  })

  // Getters
  const totalProjects = computed(() => meetingData.value.projectStats.total)
  const inProgressCount = computed(() => meetingData.value.projectStats.inProgress)
  const completedCount = computed(() => meetingData.value.projectStats.completed)
  const issuesCount = computed(() => meetingData.value.projectStats.issues)

  // Actions
  const loadData = async () => {
    try {
      const response = await fetch('/data.json')
      const data = await response.json()
      meetingData.value = data
      console.log('‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', data)
    } catch (error) {
      console.error('‚ùå Error loading data:', error)
      // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ñ‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î JSON ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
      meetingData.value = getDefaultData()
    }
  }

  const getDefaultData = (): MeetingData => {
    return {
      meetingInfo: {
        title: "‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ó‡∏µ‡∏°‡∏û‡∏±‡∏í‡∏ô‡∏≤ ‡∏õ‡∏µ 2568",
        date: "‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ó‡∏µ‡πà 30 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 05/08/2568"
      },
      projectStats: {
        total: 44,
        inProgress: 30,
        completed: 14,
        issues: 12
      },
      projects: {
        inProgress: [
          "App AtlasMonitor",
          "Healthflow API",
          "MyAtlas",
          "BMS HOSxP+ Mobile (ER)",
          "BMS HOSxP+ (‡∏ö‡∏£‡∏¥‡∏à‡∏≤‡∏Ñ‡∏≠‡∏ß‡∏±‡∏¢‡∏ß‡∏∞)",
          "Diagnosis AI (HOSxP)",
          "BMS Notification Services (Flutter .exe)",
          "Rx Intervention",
          "EHP ‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏†‡∏≤‡∏û‡∏Ñ‡∏ô‡πÑ‡∏Ç‡πâ",
          "Medication Reconcilliation",
          "laboratory ‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏• lab",
          "EHP ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏ï‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏á‡∏≤‡∏°",
          "Distict MOPH PC-1 Dashboard Flutter Web (PHR Viewer)",
          "HOSxP ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏ö‡πâ‡∏≤‡∏ô",
          "Rx Intervention Dashboard",
          "BGS NOTIFY",
          "‡∏ï‡∏π‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏ß‡∏ä‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏¢‡∏≤ Web",
          "Dental ü¶∑",
          "‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏±‡∏ô‡∏ï‡∏Å‡∏£‡∏£‡∏° EHP ‡∏Å‡∏±‡∏ö Tomorrow Smile",
          "Stretcher Center (‡∏®‡∏π‡∏ô‡∏¢‡πå‡πÄ‡∏õ‡∏•)",
          "NCDs Registry Dashboard",
          "‡πÅ‡∏û‡∏ó‡∏¢‡πå‡πÅ‡∏ú‡∏ô‡∏à‡∏µ‡∏ô",
          "HOSxP ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ï‡∏±‡∏ß tool ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å phase 2",
          "ER Registry Dashboard",
          "Tools ‡∏£‡∏û.‡∏Å‡∏£‡∏∞‡∏ó‡∏∏‡πà‡∏°‡πÅ‡∏ö‡∏ô",
          "‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏£‡∏∏‡∏†‡∏±‡∏ì‡∏ë‡πå",
          "Odin Med Check ‡∏™‡∏≤‡∏¢‡∏û‡∏≤‡∏ô‡∏¢‡∏≤",
          "Excellence Care",
          "HOSxPLabLinkOnline",
          "BMS Lab Online (API, AGENT)",
          "‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏Ñ‡πà‡∏≤ Vital Signs",
          "AtlasHomeCare (‡πÄ‡∏°‡∏ô‡∏π‡∏á‡∏≤‡∏ô‡∏ä‡∏∏‡∏°‡∏ä‡∏ô ‚Üí ‡∏™‡∏±‡πà‡∏á LAB)",
          "‡πÑ‡∏°‡πâ‡∏Å‡∏±‡πâ‡∏ô‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô WEB",
          "Dashboard ‡∏Å‡∏•‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏• (Monitor ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏Ç‡∏≠‡∏á ‡∏™‡∏õ‡∏™‡∏ä.)",
          "EHP-Consent",
          "MOPH Death Registry Dashboard",
          "Vital Sign GW",
          "NHIP PCU",
          "BMS-Consent",
          "BMS Smart Card Plugin Flutter",
          "Tools migration Crma",
          "‡∏ó‡∏î‡∏•‡∏≠‡∏á‡∏á‡∏≤‡∏ô",
          "‡∏£‡∏∞‡∏ö‡∏ö Refer ‡πÅ‡∏•‡∏∞ MOPH Refer ‡πÉ‡∏ô EHP"
        ],
        completed: [
          "‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô‡∏à‡∏±‡∏î‡∏™‡∏£‡∏£",
          "BMS Life ‡πÄ‡∏ö‡∏¥‡∏Å OT ‡∏à‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡∏° IM ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏°‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô",
          "Tools ‡∏£‡∏û.‡∏™‡∏ï my pcu"
        ],
        issues: [
          "App AtlasMonitor",
          "Healthflow API",
          "MyAtlas",
          "BMS HOSxP+ Mobile (ER)",
          "BMS HOSxP+ (‡∏ö‡∏£‡∏¥‡∏à‡∏≤‡∏Ñ‡∏≠‡∏ß‡∏±‡∏¢‡∏ß‡∏∞)",
          "laboratory ‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏• lab",
          "HOSxP ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏ö‡πâ‡∏≤‡∏ô",
          "Tools ‡∏£‡∏û.‡∏Å‡∏£‡∏∞‡∏ó‡∏∏‡πà‡∏°‡πÅ‡∏ö‡∏ô",
          "AtlasHomeCare (‡πÄ‡∏°‡∏ô‡∏π‡∏á‡∏≤‡∏ô‡∏ä‡∏∏‡∏°‡∏ä‡∏ô ‚Üí ‡∏™‡∏±‡πà‡∏á LAB)",
          "Dashboard ‡∏Å‡∏•‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏• (Monitor ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏Ç‡∏≠‡∏á ‡∏™‡∏õ‡∏™‡∏ä.)",
          "‡∏ó‡∏î‡∏•‡∏≠‡∏á‡∏á‡∏≤‡∏ô",
          "‡∏£‡∏∞‡∏ö‡∏ö Refer ‡πÅ‡∏•‡∏∞ MOPH Refer ‡πÉ‡∏ô EHP"
        ]
      },
      projectDetails: [],
      issuesDetails: [
        {
          project: "App AtlasMonitor",
          description: "‡∏á‡∏≤‡∏ô‡∏ä‡∏∏‡∏°‡∏ä‡∏ô ‡πÄ‡∏°‡∏ô‡∏π‡∏Ñ‡∏±‡∏î‡∏Å‡∏£‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á ‡∏ß‡∏≤‡∏á UI ‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
          priority: "high"
        },
        {
          project: "Healthflow API",
          description: "‡∏£‡∏≠ requirement API ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° (‡∏´‡∏≠‡∏ö‡∏´‡∏¥‡∏î)",
          priority: "medium"
        },
        {
          project: "MyAtlas",
          description: "‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏´‡∏≠‡∏ö‡∏´‡∏∑‡∏î ‡πÅ‡∏•‡∏∞‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÅ‡∏•‡πâ‡∏ß ‡∏£‡∏≠‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏≤‡∏° requirement ‡πÉ‡∏´‡∏°‡πà",
          priority: "medium"
        },
        {
          project: "BMS HOSxP+ Mobile (ER)",
          description: "‡∏™‡∏±‡πà‡∏á Doctor Order (Med, Lab, Xray, ‡∏´‡∏±‡∏ï‡∏ñ‡∏Å‡∏≤‡∏£, Set OR)",
          priority: "high"
        },
        {
          project: "BMS HOSxP+ (‡∏ö‡∏£‡∏¥‡∏à‡∏≤‡∏Ñ‡∏≠‡∏ß‡∏±‡∏¢‡∏ß‡∏∞)",
          description: "‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô UI ‡πÉ‡∏´‡∏°‡πà",
          priority: "medium"
        },
        {
          project: "laboratory ‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏• lab",
          description: "‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å lab ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô‡∏Å‡∏£‡∏≤‡∏ü ‡πÄ‡∏™‡πâ‡∏ô‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ï‡πà‡∏ä‡∏∑‡∏≠ series ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠ lab ‡πÉ‡∏´‡πâ",
          priority: "high"
        },
        {
          project: "HOSxP ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏ö‡πâ‡∏≤‡∏ô",
          description: "‡∏™‡πà‡∏á‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏ö‡πâ‡∏≤‡∏ô ‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ IPD, ‡∏•‡∏î ToKen AI ‡∏•‡∏á‡∏°‡∏≤‡∏≠‡∏µ‡∏Å ‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏©‡∏≤ English ‡πÅ‡∏ó‡∏ô ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢",
          priority: "high"
        },
        {
          project: "Tools ‡∏£‡∏û.‡∏Å‡∏£‡∏∞‡∏ó‡∏∏‡πà‡∏°‡πÅ‡∏ö‡∏ô",
          description: "‡πÅ‡∏õ‡∏•‡∏á‡∏£‡∏π‡∏õ tiff ‡πÄ‡∏õ‡πá‡∏ô jpg - ‡∏•‡∏≠‡∏á‡∏ó‡∏≥‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡∏î‡∏∂‡∏á‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏á‡∏ö‡∏ô code dephi ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
          priority: "medium"
        },
        {
          project: "AtlasHomeCare (‡πÄ‡∏°‡∏ô‡∏π‡∏á‡∏≤‡∏ô‡∏ä‡∏∏‡∏°‡∏ä‡∏ô ‚Üí ‡∏™‡∏±‡πà‡∏á LAB)",
          description: "‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö requirement ‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° 1. ‡πÄ‡∏°‡∏ô‡∏π‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ AuthenCode 2. ‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ CID, HN, ‡∏ä‡∏∑‡πà‡∏≠ 3. LAB ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÉ‡∏ö‡∏™‡∏±‡πà‡∏á 4. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡∏¥‡∏î visit",
          priority: "high"
        },
        {
          project: "Dashboard ‡∏Å‡∏•‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏• (Monitor ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏Ç‡∏≠‡∏á ‡∏™‡∏õ‡∏™‡∏ä.)",
          description: "flutter ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏ü‡∏•‡πå Excel .xls ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏Å‡πà‡∏≤ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÅ‡∏Ñ‡πà .xlsx",
          priority: "medium"
        },
        {
          project: "‡∏ó‡∏î‡∏•‡∏≠‡∏á‡∏á‡∏≤‡∏ô",
          description: "VS Code ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏±‡∏ô flutter ‡∏ú‡πà‡∏≤‡∏ô Emulator ‡πÑ‡∏î‡πâ",
          priority: "low"
        },
        {
          project: "‡∏£‡∏∞‡∏ö‡∏ö Refer ‡πÅ‡∏•‡∏∞ MOPH Refer ‡πÉ‡∏ô EHP",
          description: "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ Refer In ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà",
          priority: "medium"
        }
      ],
      codeReview: [
        {
          project: "NHIP - ‡∏Ç‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏ô‡∏ä‡∏∏‡∏°‡∏ä‡∏ô Community Activity",
          description: "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Source Code ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà",
          priority: "medium"
        },
        {
          project: "NHIP - ‡∏Ç‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏Ñ‡πà‡∏≤ Vital Signs (One Stop Service)",
          description: "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Source Code ‡πÅ‡∏•‡∏∞‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà",
          priority: "medium"
        }
      ],
      codeReviewer: "‡∏≠‡∏≤‡∏£‡∏¢‡∏≤ ‡∏â‡∏≤‡∏¢‡∏≤‡∏á‡∏≤‡∏° (‡πÄ‡∏≠‡∏¥‡∏£‡πå‡∏ô)"
    }
  }

  const updateMeetingInfo = (title: string, date: string) => {
    meetingData.value.meetingInfo.title = title
    meetingData.value.meetingInfo.date = date
  }

  const updateProjects = (category: keyof typeof meetingData.value.projects, projects: string[]) => {
    meetingData.value.projects[category] = projects
    updateStats()
  }

  const updateStats = () => {
    const { inProgress, completed, issues } = meetingData.value.projects
    meetingData.value.projectStats.inProgress = inProgress.length
    meetingData.value.projectStats.completed = completed.length
    meetingData.value.projectStats.issues = issues.length
    meetingData.value.projectStats.total = inProgress.length + completed.length
  }

  const addProject = (category: keyof typeof meetingData.value.projects, projectName: string) => {
    if (meetingData.value.projects[category]) {
      meetingData.value.projects[category].push(projectName)
      updateStats()
    }
  }

  const removeProject = (category: keyof typeof meetingData.value.projects, projectName: string) => {
    if (meetingData.value.projects[category]) {
      const index = meetingData.value.projects[category].indexOf(projectName)
      if (index > -1) {
        meetingData.value.projects[category].splice(index, 1)
        updateStats()
      }
    }
  }

  const updateProjectStatus = (projectName: string, newStatus: keyof typeof meetingData.value.projects) => {
    // ‡∏•‡∏ö‡∏à‡∏≤‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏î‡∏¥‡∏°
    Object.keys(meetingData.value.projects).forEach(status => {
      const index = meetingData.value.projects[status as keyof typeof meetingData.value.projects].indexOf(projectName)
      if (index > -1) {
        meetingData.value.projects[status as keyof typeof meetingData.value.projects].splice(index, 1)
      }
    })
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏´‡∏°‡πà
    if (meetingData.value.projects[newStatus]) {
      meetingData.value.projects[newStatus].push(projectName)
    }
    
    updateStats()
  }

  const saveData = () => {
    // ‡πÉ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á server
    console.log('Data to save:', JSON.stringify(meetingData.value, null, 2))
    
    // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå JSON
    const dataStr = JSON.stringify(meetingData.value, null, 2)
    const dataBlob = new Blob([dataStr], {type: 'application/json'})
    const url = URL.createObjectURL(dataBlob)
    
    const link = document.createElement('a')
    link.href = url
    link.download = 'updated_data.json'
    link.click()
    
    URL.revokeObjectURL(url)
  }

  return {
    // State
    meetingData,
    
    // Getters
    totalProjects,
    inProgressCount,
    completedCount,
    issuesCount,
    
    // Actions
    loadData,
    updateMeetingInfo,
    updateProjects,
    addProject,
    removeProject,
    updateProjectStatus,
    saveData
  }
})
